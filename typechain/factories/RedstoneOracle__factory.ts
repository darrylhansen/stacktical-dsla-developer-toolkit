/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RedstoneOracle,
  RedstoneOracleInterface,
} from "../RedstoneOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract PeriodRegistry",
        name: "_periodRegistry",
        type: "address",
      },
      {
        internalType: "contract StakeRegistry",
        name: "_stakeRegistry",
        type: "address",
      },
      {
        internalType: "string",
        name: "_lpName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_lpSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_spName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_spSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CalldataMustHaveValidPayload",
    type: "error",
  },
  {
    inputs: [],
    name: "CalldataOverOrUnderFlow",
    type: "error",
  },
  {
    inputs: [],
    name: "CanNotPickMedianOfEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampMustNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "EachSignerMustProvideTheSameValue",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyCalldataPointersArr",
    type: "error",
  },
  {
    inputs: [],
    name: "GetDataServiceIdNotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectUnsignedMetadataSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedSignersCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredSignersCount",
        type: "uint256",
      },
    ],
    name: "InsufficientNumberOfUniqueSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCalldataPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivedSigner",
        type: "address",
      },
    ],
    name: "SignerNotAuthorised",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "TimestampFromTooLongFuture",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "TimestampIsTooOld",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "slaAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oracle",
        type: "bytes32",
      },
    ],
    name: "DataFeedSetForSLA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "jobId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "JobIdModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "slaAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "chainlinkResponse",
        type: "bytes32",
      },
    ],
    name: "SLIReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestsCounter",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    name: "SLIRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "aggregateValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extractTimestampsAndAssertAllAreEqual",
    outputs: [
      {
        internalType: "uint256",
        name: "extractedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_chainlinkResponse",
        type: "uint256",
      },
    ],
    name: "fulfillSLI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fulfillsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAuthorisedSignerIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataServiceId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
    ],
    name: "getOracleForSLA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniqueSignersThreshold",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jobId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "slaId",
        type: "uint128",
      },
    ],
    name: "lpSymbolSlaId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messengerPrecision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_ownerApproval",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_callerAddress",
        type: "address",
      },
    ],
    name: "requestSLI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "retryRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "setChainlinkJobID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_oracle",
        type: "bytes32",
      },
    ],
    name: "setDataFeedForSLA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setSLARegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slaRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "slaId",
        type: "uint128",
      },
    ],
    name: "spSymbolSlaId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testingOracleID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampMilliseconds",
        type: "uint256",
      },
    ],
    name: "validateTimestamp",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527130783864303461373865356231353334613560701b6002556007805460ff60a01b191690553480156200003757600080fd5b50604051620020cc380380620020cc8339810160408190526200005a91620002dd565b6200006533620000fd565b60018055600680546001600160a01b038089166001600160a01b03199283161790925560078054928816929091169190911790558351620000ae9060089060208701906200014d565b508251620000c49060099060208601906200014d565b508151620000da90600a9060208501906200014d565b508051620000f090600b9060208401906200014d565b50505050505050620003f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200015b90620003bb565b90600052602060002090601f0160209004810192826200017f5760008555620001ca565b82601f106200019a57805160ff1916838001178555620001ca565b82800160010185558215620001ca579182015b82811115620001ca578251825591602001919060010190620001ad565b50620001d8929150620001dc565b5090565b5b80821115620001d85760008155600101620001dd565b80516001600160a01b03811681146200020b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023857600080fd5b81516001600160401b038082111562000255576200025562000210565b604051601f8301601f19908116603f0116810190828211818310171562000280576200028062000210565b816040528381526020925086838588010111156200029d57600080fd5b600091505b83821015620002c15785820183015181830184015290820190620002a2565b83821115620002d35760008385830101525b9695505050505050565b60008060008060008060c08789031215620002f757600080fd5b6200030287620001f3565b95506200031260208801620001f3565b60408801519095506001600160401b03808211156200033057600080fd5b6200033e8a838b0162000226565b955060608901519150808211156200035557600080fd5b620003638a838b0162000226565b945060808901519150808211156200037a57600080fd5b620003888a838b0162000226565b935060a08901519150808211156200039f57600080fd5b50620003ae89828a0162000226565b9150509295509295509295565b600181811c90821680620003d057607f821691505b60208210811415620003f257634e487b7160e01b600052602260045260246000fd5b50919050565b611cc480620004086000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806397a8219211610104578063cb8d3fcf116100a2578063f2fde38b11610071578063f2fde38b146103a4578063f3881589146103b7578063f50b2efe146103bf578063f90c4924146103d257600080fd5b8063cb8d3fcf14610376578063ccb1637c14610389578063ddca3f4314610367578063e450f0611461039157600080fd5b8063bc0bfc00116100de578063bc0bfc001461031b578063c274583a1461032e578063c2939d9714610367578063c9b0cb221461036e57600080fd5b806397a82192146102ed578063a50c542514610300578063b24ebfcc1461030857600080fd5b806355a547d51161017c57806376ff294b1161014b57806376ff294b146102c55780637dc0d1d0146102cd5780638b6bd736146102d45780638da5cb5b146102dc57600080fd5b806355a547d514610288578063663c2269146102905780636e71890d14610298578063715018a6146102bd57600080fd5b8063292733bf116101b8578063292733bf146102405780633ce142f514610252578063411d16321461027757806346cd68011461028057600080fd5b806311971c46146101df5780631914259d1461020857806323b517621461021d575b600080fd5b6101f26101ed3660046117ff565b6103d9565b6040516101ff9190611854565b60405180910390f35b61021b61021636600461189e565b610416565b005b61023261022b3660046118c8565b5060025490565b6040519081526020016101ff565b61021b61024e3660046118e3565b5050565b6102656102603660046118c8565b610458565b60405160ff90911681526020016101ff565b61023260025481565b6101f26104e2565b610232610570565b600454610232565b6003546001600160a01b03165b6040516001600160a01b0390911681526020016101ff565b61021b61067f565b6101f2610693565b60006102a5565b6101f26106a0565b6000546001600160a01b03166102a5565b61021b6102fb366004611913565b6106ad565b600554610232565b610232610316366004611978565b61086c565b61021b6103293660046118e3565b61087d565b60408051808201909152601981527f72656473746f6e652d637573746f6d2d75726c732d64656d6f0000000000000060208201526101f2565b6000610232565b6103e8610232565b6101f26103843660046117ff565b61088e565b6101f26108a4565b61021b61039f36600461189e565b6108b1565b61021b6103b23660046118c8565b610a8c565b61021b610b05565b61021b6103cd366004611a2a565b610b83565b6002610265565b6060600b6103ef836001600160801b0316610b8c565b604051602001610400929190611a94565b6040516020818303038152906040529050919050565b61041e610c29565b60405181906001600160a01b038416907f258a3686081ad31a091f2ee44c14543b1b3495f2935dfcc255750a332def7c7590600090a35050565b60007311fffc9970c41b9bfb9aa35be838d39bce918cff6001600160a01b038316141561048757506000919050565b73dbcc2c6c892c8d3e3fe4d325fec810b7376a5ed66001600160a01b03831614156104b457506001919050565b6040516303b1166f60e61b81526001600160a01b03831660048201526024015b60405180910390fd5b919050565b600880546104ef90611a43565b80601f016020809104026020016040519081016040528092919081815260200182805461051b90611a43565b80156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b505050505081565b60008061057b610c83565b9050600061058882610d31565b61ffff169050806105ac57604051632154bfcf60e21b815260040160405180910390fd5b6105b7600283611b61565b915060005b818110156106795760006105cf84610d6b565b90506000806105df606887611b61565b905060006105ed8236611b79565b80359350905065ffffffffffff831661061957604051630336dc9d60e41b815260040160405180910390fd5b8761062e578265ffffffffffff169750610656565b878365ffffffffffff16146106565760405163d9d1f46560e01b815260040160405180910390fd5b6106608488611b61565b965050505050808061067190611b90565b9150506105bc565b50505090565b610687610c29565b6106916000610da7565b565b600a80546104ef90611a43565b600b80546104ef90611a43565b600754600160a01b900460ff16610722576003546001600160a01b031633146107225760405162461bcd60e51b815260206004820152602160248201527f43616e206f6e6c792062652063616c6c656420627920534c41526567697374726044820152607960f81b60648201526084016104d4565b61072a610df7565b6002548061078e5760405162461bcd60e51b815260206004820152602b60248201527f534c4120646f6573206e6f742068617665206120636f72726573706f6e64696e60448201526a19c819185d18481999595960aa1b60648201526084016104d4565b600061079982610e51565b90506001600460008282546107ae9190611b61565b909155505060045460408051918252602082018490526001600160a01b038516917feab5eb77e722078f3fab7eb6a77c74f7001181e1e3a74d51b7b5747ee1b31cb9910160405180910390a2604051636bd2e21160e11b815260048101829052602481018790526001600160a01b0386169063d7a5c42290604401600060405180830381600087803b15801561084357600080fd5b505af1158015610857573d6000803e3d6000fd5b50505050505061086660018055565b50505050565b600061087782610ec1565b92915050565b610885610df7565b61024e60018055565b606060096103ef836001600160801b0316610b8c565b600980546104ef90611a43565b60078054600160a01b60ff60a01b1982161790915560405163ab9a81a560e01b81526001600160a01b038481166004830152602482018490529091169063ab9a81a59060440160206040518083038186803b15801561090f57600080fd5b505afa158015610923573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109479190611bab565b6109935760405162461bcd60e51b815260206004820152601b60248201527f5374616b6552656769737472793a206e6f74207665726966696564000000000060448201526064016104d4565b6040516320c876ef60e11b81526004810182905282906000906001600160a01b03831690634190edde9060240160606040518083038186803b1580156109d857600080fd5b505afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190611bc8565b925060009150610a1d9050565b816002811115610a2f57610a2f611c05565b14610a6c5760405162461bcd60e51b815260206004820152600d60248201526c14d3104e881d995c9a599a5959609a1b60448201526064016104d4565b610a7983856000336106ad565b50506007805460ff60a01b191690555050565b610a94610c29565b6001600160a01b038116610af95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d4565b610b0281610da7565b50565b6003546001600160a01b031615610b6f5760405162461bcd60e51b815260206004820152602860248201527f534c41526567697374727920616464726573732068617320616c7265616479206044820152671899595b881cd95d60c21b60648201526084016104d4565b600380546001600160a01b03191633179055565b610b0281610ecc565b60606000610b9983610f4c565b600101905060008167ffffffffffffffff811115610bb957610bb9611962565b6040519080825280601f01601f191660200182016040528015610be3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c1c57610c21565b610bed565b509392505050565b6000546001600160a01b031633146106915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d4565b60006602ed57011e0000601f1936013581161480610cb4576040516373bb264f60e11b815260040160405180910390fd5b60003660291115610cd857604051632bcb7bc560e11b815260040160405180910390fd5b5060281936013560006009610cf3600362ffffff8516611b61565b610cfd9190611b61565b905036610d0b600283611b61565b1115610d2a5760405163c30a7bd760e01b815260040160405180910390fd5b9392505050565b600080610d3f602084611b61565b905036811115610d6257604051632bcb7bc560e11b815260040160405180910390fd5b36033592915050565b6000806000610d7984611024565b9092509050604e610d8b826020611b61565b610d959084611c31565b610d9f9190611b61565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001541415610e4a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104d4565b6002600155565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610e8a57610e8a611c50565b602002602001018181525050610e9f8161107b565b600081518110610eb157610eb1611c50565b6020026020010151915050919050565b600061087782611086565b6000610eda6103e883611c66565b905080421015610f1857603c610ef04283611b79565b111561024e5760405163b6b0916d60e01b8152600481018290524260248201526044016104d4565b60b4610f248242611b79565b111561024e57604051630321d0b560e01b8152600481018290524260248201526044016104d4565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f8b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fb7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fd557662386f26fc10000830492506010015b6305f5e1008310610fed576305f5e100830492506008015b612710831061100157612710830492506004015b60648310611013576064830492506002015b600a83106108775760010192915050565b600080808080611035604187611b61565b9050600061104e611047602084611b61565b3690611145565b80359450905061105f816003611145565b62ffffff9490941697933563ffffffff16965092945050505050565b606061087782611151565b60008151600014156110ab57604051639e198af960e01b815260040160405180910390fd5b6110b482611315565b6000600283516110c49190611c66565b9050600283516110d49190611c7a565b61112d576000611120846110e9600185611b79565b815181106110f9576110f9611c50565b602002602001015185848151811061111357611113611c50565b602002602001015161135d565b9050610d9f600282611c66565b828181518110610eb157610eb1611c50565b50919050565b6000610d2a8284611b79565b60606000825167ffffffffffffffff81111561116f5761116f611962565b604051908082528060200260200182016040528015611198578160200160208202803683370190505b5090506000835167ffffffffffffffff8111156111b7576111b7611962565b6040519080825280602002602001820160405280156111e0578160200160208202803683370190505b5090506000845167ffffffffffffffff8111156111ff576111ff611962565b60405190808252806020026020018201604052801561123257816020015b606081526020019060019003908161121d5790505b50905060005b855181101561128f5760408051600280825260608201835290916020830190803683370190505082828151811061127157611271611c50565b6020026020010181905250808061128790611b90565b915050611238565b50600061129a610c83565b905060006112a782610d31565b61ffff1690506112b8600283611b61565b60405190925060005b828110156112fe5760006112d88a89898989611369565b90506112e48186611b61565b9450826040525080806112f690611b90565b9150506112c1565b506113098487611603565b98975050505050505050565b8051602082016020820281019150805b8281101561086657815b8181101561135457815181518082101561134a578084528183525b505060200161132f565b50602001611325565b6000610d2a8284611b61565b60008060008061137885611024565b909250905060008080606081600d61139b611394602089611b61565b899061171c565b6113a59190611b61565b905060006113b761104760688d611b61565b905060006113d4836113ca60418f611b61565b6110479190611b61565b90506113e083826113f3565b9350826020850120945081359650611417565b60408051838152602081850181019092526000910183838237601f19019392505050565b6114288765ffffffffffff16610b83565b61143c8561143760418f611b61565b611728565b955061144786610458565b60ff1699505050505050505060008060005b848110156115d05761146c8885836117a0565b909350915060005b8c518110156115bd578c818151811061148f5761148f611c50565b60200260200101518414156115ab5760008b82815181106114b2576114b2611c50565b602002602001015190506114cb81896001901b16151590565b1580156114f45750600260ff168d83815181106114ea576114ea611c50565b6020026020010151105b156115a5578c828151811061150b5761150b611c50565b60200260200101805180919061152090611b90565b81525050838b838151811061153757611537611c50565b602002602001015160018f858151811061155357611553611c50565b60200260200101516115659190611b79565b8151811061157557611575611c50565b60209081029190910101526001881b81178c838151811061159857611598611c50565b6020026020010181815250505b506115bd565b806115b581611b90565b915050611474565b50806115c881611b90565b915050611459565b505050816020826115e19190611b61565b6115eb9190611c31565b6115f690604e611b61565b9998505050505050505050565b60606000835167ffffffffffffffff81111561162157611621611962565b60405190808252806020026020018201604052801561164a578160200160208202803683370190505b509050600260005b8551811015611712578185828151811061166e5761166e611c50565b602002602001015110156116bb5784818151811061168e5761168e611c50565b602002602001015182604051632b13aef560e01b81526004016104d4929190918252602082015260400190565b60006116df8783815181106116d2576116d2611c50565b602002602001015161086c565b9050808483815181106116f4576116f4611c50565b6020908102919091010152508061170a81611b90565b915050611652565b5090949350505050565b6000610d2a8284611c31565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa15801561178b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080806117af604e87611b61565b905060006117dc6117d56117c4602089611b61565b6117cf886001611b61565b9061171c565b839061135d565b905060006117ea3683611145565b80359960209091013598509650505050505050565b60006020828403121561181157600080fd5b81356001600160801b0381168114610d2a57600080fd5b60005b8381101561184357818101518382015260200161182b565b838111156108665750506000910152565b6020815260008251806020840152611873816040850160208701611828565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146104dd57600080fd5b600080604083850312156118b157600080fd5b6118ba83611887565b946020939093013593505050565b6000602082840312156118da57600080fd5b610d2a82611887565b600080604083850312156118f657600080fd5b50508035926020909101359150565b8015158114610b0257600080fd5b6000806000806080858703121561192957600080fd5b8435935061193960208601611887565b9250604085013561194981611905565b915061195760608601611887565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561198b57600080fd5b823567ffffffffffffffff808211156119a357600080fd5b818501915085601f8301126119b757600080fd5b8135818111156119c9576119c9611962565b8060051b604051601f19603f830116810181811085821117156119ee576119ee611962565b604052918252848201925083810185019188831115611a0c57600080fd5b938501935b8285101561130957843584529385019392850192611a11565b600060208284031215611a3c57600080fd5b5035919050565b600181811c90821680611a5757607f821691505b6020821081141561113f57634e487b7160e01b600052602260045260246000fd5b60008151611a8a818560208601611828565b9290920192915050565b600080845481600182811c915080831680611ab057607f831692505b6020808410821415611ad057634e487b7160e01b86526022600452602486fd5b818015611ae45760018114611af557611b22565b60ff19861689528489019650611b22565b60008b81526020902060005b86811015611b1a5781548b820152908501908301611b01565b505084890196505b505050505050611b42611b3c82602d60f81b815260010190565b85611a78565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611b7457611b74611b4b565b500190565b600082821015611b8b57611b8b611b4b565b500390565b6000600019821415611ba457611ba4611b4b565b5060010190565b600060208284031215611bbd57600080fd5b8151610d2a81611905565b600080600060608486031215611bdd57600080fd5b8351925060208401519150604084015160038110611bfa57600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000816000190483118215151615611c4b57611c4b611b4b565b500290565b634e487b7160e01b600052603260045260246000fd5b600082611c7557611c75611c1b565b500490565b600082611c8957611c89611c1b565b50069056fea2646970667358221220be8aec3a031ad8844b18e040452b68d3d788446f5f7593344969370e4e8cfc9f64736f6c63430008090033";

export class RedstoneOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _periodRegistry: string,
    _stakeRegistry: string,
    _lpName: string,
    _lpSymbol: string,
    _spName: string,
    _spSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RedstoneOracle> {
    return super.deploy(
      _periodRegistry,
      _stakeRegistry,
      _lpName,
      _lpSymbol,
      _spName,
      _spSymbol,
      overrides || {}
    ) as Promise<RedstoneOracle>;
  }
  getDeployTransaction(
    _periodRegistry: string,
    _stakeRegistry: string,
    _lpName: string,
    _lpSymbol: string,
    _spName: string,
    _spSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _periodRegistry,
      _stakeRegistry,
      _lpName,
      _lpSymbol,
      _spName,
      _spSymbol,
      overrides || {}
    );
  }
  attach(address: string): RedstoneOracle {
    return super.attach(address) as RedstoneOracle;
  }
  connect(signer: Signer): RedstoneOracle__factory {
    return super.connect(signer) as RedstoneOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedstoneOracleInterface {
    return new utils.Interface(_abi) as RedstoneOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RedstoneOracle {
    return new Contract(address, _abi, signerOrProvider) as RedstoneOracle;
  }
}
